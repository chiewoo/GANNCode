# Filename: auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002.condor.sub
# Generated by condor_submit_dag auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002 
universe	= scheduler
executable	= /usr/bin/condor_dagman
getenv		= True
output		= auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002.lib.out
error		= auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002.lib.err
log		= auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002.dagman.log
remove_kill_sig	= SIGUSR1
+OtherJobRemoveRequirements	= "DAGManJobId == $(cluster)"
# Note: default on_exit_remove expression:
# ( ExitSignal =?= 11 || (ExitCode =!= UNDEFINED && ExitCode >=0 && ExitCode <= 2))
# attempts to ensure that DAGMan is automatically
# requeued by the schedd if it exits abnormally or
# is killed (e.g., during a reboot).
on_exit_remove	= ( ExitSignal =?= 11 || (ExitCode =!= UNDEFINED && ExitCode >=0 && ExitCode <= 2))
copy_to_spool	= False
arguments	= "-f -l . -Lockfile auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002.lock -AutoRescue 1 -DoRescueFrom 0 -Dag auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002 -CsdVersion $CondorVersion:' '7.6.3' 'Aug' '17' '2011' 'BuildID:' '361356' '$ -Dagman /usr/bin/condor_dagman"
environment	= _CONDOR_DAGMAN_LOG=auxmvc_ann_n70n15n1_c10_mr10_p1000_g100_rmin-25_rmax25_gsigma50_y1001_z05_f05g09_m8000.dag.rescue002.dagman.out;_CONDOR_MAX_DAGMAN_LOG=0
queue
